import { PrettyProps } from "../Pretty";

/**
 * A fairly gross way of organizing props so we don't unintentionally pass
 * props to native HTML elements.
 */
declare export var organizeProps: (
  props: PrettyProps
) => {
  pcrProps: {
    animation: "smooth" | "jelly" | "tada" | "rotate" | "pulse" | void,
    bigger: boolean | void,
    plain: boolean | void,
    shape: "square" | "round" | "fill" | "curve" | "outline" | "slim" | void,
    fill: "thick" | "fill" | void,
    iconType: "image" | "svg" | "icon" | void,
    isSwitch: boolean | void,
    setState: $PropertyType<$Exports<"react">, "Dispatch"> | void,
    className: string | void,
    ...
  },
  inputProps: {
    onChange: ((
      event: $PropertyType<$Exports<"react">, "ChangeEvent">
    ) => void) &
      ((
        e: $PropertyType<$Exports<"react">, "ChangeEvent">,
        value?: any
      ) => void),
    disabled: boolean | void,
    value: string | number | string[] | void,
    state: any,
    locked: boolean | void,
    type: "checkbox" | "radio" | void,
    name: string | void,
    checked: boolean | void,
    baseId: string | void,
    defaultValue: string | number | string[] | void,
    defaultChecked: boolean | void,
    ...
  },
  labelProps: {
    children: $PropertyType<$Exports<"react">, "ReactNode">,
    baseId: string | void,
    color:
      | "success"
      | "primary"
      | "warning"
      | "info"
      | "danger"
      | "primary-o"
      | "success-o"
      | "warning-o"
      | "info-o"
      | "danger-o"
      | void,
    icon: $PropertyType<$Exports<"react">, "ReactElement"> | void,
    ...
  },
  htmlProps: { [key: string]: any, ... },
  ...
};
