import * as React from "react";
import { CommonCheckboxRadioProps } from "../types/CommonProps";
import { GroupProps } from "./Group";
export type RadioState = boolean | string;
export type RadioProps = CommonCheckboxRadioProps<RadioState>;
declare export var useRadioState: (x?: {
  state?: string | boolean | void,
  ...
}) => {
  baseId: string,
  state: string | boolean,
  setState: React.Dispatch<React.SetStateAction<string | boolean>>,
  onChange: (
    e: React.ChangeEvent<HTMLInputElement>,
    args?: string | boolean | void
  ) => void,
  ...
};
declare export var RadioGroup: (props: GroupProps) => React$Node;
declare export var Radio: React.ForwardRefExoticComponent<
  React.InputHTMLAttributes<HTMLInputElement> & {
    state: string | boolean,
    setState?: React.Dispatch<React.SetStateAction<string | boolean>> | void,
    onChange: (e: React.ChangeEvent<HTMLInputElement>, value?: any) => void,
    color?:
      | "success"
      | "primary"
      | "warning"
      | "info"
      | "danger"
      | "primary-o"
      | "success-o"
      | "warning-o"
      | "info-o"
      | "danger-o"
      | void,
    locked?: boolean | void,
    bigger?: boolean | void,
    className?: string | void,
    type?: "checkbox" | "radio" | void,
    baseId?: string | void,
    ...
  } & {
    icon?: React.ReactElement<any, "i" | "img" | "svg"> | void,
    iconType?: "image" | "svg" | "icon" | void,
    fill?: "thick" | "fill" | void,
    shape?: "square" | "round" | "curve" | void,
    animation?: "smooth" | "jelly" | "tada" | "rotate" | "pulse" | void,
    plain?: boolean | void,
    ...
  } & React.RefAttributes<HTMLInputElement>
>;
