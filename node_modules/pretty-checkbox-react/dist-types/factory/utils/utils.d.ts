/// <reference types="react" />
import { CommonControlledProps } from '../../types/CommonProps';
export declare const isBoolean: (value?: any) => boolean;
export declare const getChecked: (args: Pick<CommonControlledProps<any>, "disabled" | "locked" | "state" | "value" | "type">) => any;
export declare const isDefaultStyle: (animation: "smooth" | "jelly" | "tada" | "rotate" | "pulse" | undefined, icon?: any) => boolean;
export declare const getClassNames: ({ animation, icon, locked, bigger, plain, shape, fill, className, readOnly, isSwitch, iconType, }: import("react").InputHTMLAttributes<HTMLInputElement> & {
    state: any;
    setState?: import("react").Dispatch<any> | undefined;
    onChange: (e: import("react").ChangeEvent<HTMLInputElement>, value?: any) => void;
    color?: "success" | "primary" | "warning" | "info" | "danger" | "primary-o" | "success-o" | "warning-o" | "info-o" | "danger-o" | undefined;
    locked?: boolean | undefined;
    bigger?: boolean | undefined;
    className?: string | undefined;
    type?: "checkbox" | "radio" | undefined;
    baseId?: string | undefined;
} & {
    icon?: import("react").ReactElement<any, "i" | "img" | "svg"> | undefined;
    iconType?: "image" | "svg" | "icon" | undefined;
    fill?: "thick" | "fill" | undefined;
    shape?: "square" | "round" | "curve" | undefined;
    animation?: "smooth" | "jelly" | "tada" | "rotate" | "pulse" | undefined;
    plain?: boolean | undefined;
} & {
    isSwitch?: boolean | undefined;
}) => string;
//# sourceMappingURL=utils.d.ts.map